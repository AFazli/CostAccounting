// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shoniz.CostAccounting.Database;

#nullable disable

namespace Shoniz.CostAccounting.Database.Migrations
{
    [DbContext(typeof(CostAccountingDbContext))]
    [Migration("20220528063219_AddCalculateFormulationColumnsInFormulationDetail")]
    partial class AddCalculateFormulationColumnsInFormulationDetail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shoniz.CostAccounting.FormulationContext.Domain.FormulationAggregate.Formulation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("HumidityPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal")
                        .HasDefaultValueSql("0");

                    b.Property<Guid>("ProductCode")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DateTime2");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("DateTime2");

                    b.HasKey("Id");

                    b.ToTable("Formulations", "FormulationContext");
                });

            modelBuilder.Entity("Shoniz.CostAccounting.FormulationContext.Domain.FormulationAggregate.FormulationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("FormulationId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("GoodsCode")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("Mammock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("DateTime2");

                    b.Property<decimal>("UsedAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("FormulationId");

                    b.ToTable("FormulationDetails", "FormulationContext");
                });

            modelBuilder.Entity("Shoniz.CostAccounting.FormulationContext.Domain.FormulationAggregate.FormulationDetail", b =>
                {
                    b.HasOne("Shoniz.CostAccounting.FormulationContext.Domain.FormulationAggregate.Formulation", null)
                        .WithMany("FormulationDetails")
                        .HasForeignKey("FormulationId");

                    b.OwnsOne("Shoniz.CostAccounting.FormulationContext.Domain.FormulationAggregate.CalculateFormulation", "CalculateFormulation", b1 =>
                        {
                            b1.Property<Guid>("FormulationDetailId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<decimal>("DroppedAmount")
                                .HasColumnType("Decimal");

                            b1.Property<decimal>("DroppedPercent")
                                .HasColumnType("Decimal");

                            b1.Property<decimal>("UsedPercent")
                                .HasColumnType("Decimal");

                            b1.HasKey("FormulationDetailId");

                            b1.ToTable("FormulationDetails", "FormulationContext");

                            b1.WithOwner()
                                .HasForeignKey("FormulationDetailId");
                        });

                    b.Navigation("CalculateFormulation")
                        .IsRequired();
                });

            modelBuilder.Entity("Shoniz.CostAccounting.FormulationContext.Domain.FormulationAggregate.Formulation", b =>
                {
                    b.Navigation("FormulationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
